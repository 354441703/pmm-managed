// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pmm.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	pmm.proto

It has these top-level messages:
	BaseVersionRequest
	BaseVersionResponse
	BasePingRequest
	BasePingResponse
	AlertRule
	AlertsListRequest
	AlertsListResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Error is the error status of a request.
type Error int32

const (
	Error_NO_ERROR Error = 0
)

var Error_name = map[int32]string{
	0: "NO_ERROR",
}
var Error_value = map[string]int32{
	"NO_ERROR": 0,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}
func (Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingType int32

const (
	PingType_PING PingType = 0
	PingType_PONG PingType = 1
)

var PingType_name = map[int32]string{
	0: "PING",
	1: "PONG",
}
var PingType_value = map[string]int32{
	"PING": 0,
	"PONG": 1,
}

func (x PingType) String() string {
	return proto.EnumName(PingType_name, int32(x))
}
func (PingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BaseVersionRequest struct {
}

func (m *BaseVersionRequest) Reset()                    { *m = BaseVersionRequest{} }
func (m *BaseVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*BaseVersionRequest) ProtoMessage()               {}
func (*BaseVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BaseVersionResponse struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *BaseVersionResponse) Reset()                    { *m = BaseVersionResponse{} }
func (m *BaseVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*BaseVersionResponse) ProtoMessage()               {}
func (*BaseVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BaseVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type BasePingRequest struct {
	Type   PingType `protobuf:"varint,1,opt,name=type,enum=api.PingType" json:"type,omitempty"`
	Cookie uint64   `protobuf:"fixed64,2,opt,name=cookie" json:"cookie,omitempty"`
}

func (m *BasePingRequest) Reset()                    { *m = BasePingRequest{} }
func (m *BasePingRequest) String() string            { return proto.CompactTextString(m) }
func (*BasePingRequest) ProtoMessage()               {}
func (*BasePingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BasePingRequest) GetType() PingType {
	if m != nil {
		return m.Type
	}
	return PingType_PING
}

func (m *BasePingRequest) GetCookie() uint64 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

type BasePingResponse struct {
	Type   PingType `protobuf:"varint,1,opt,name=type,enum=api.PingType" json:"type,omitempty"`
	Cookie uint64   `protobuf:"fixed64,2,opt,name=cookie" json:"cookie,omitempty"`
}

func (m *BasePingResponse) Reset()                    { *m = BasePingResponse{} }
func (m *BasePingResponse) String() string            { return proto.CompactTextString(m) }
func (*BasePingResponse) ProtoMessage()               {}
func (*BasePingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BasePingResponse) GetType() PingType {
	if m != nil {
		return m.Type
	}
	return PingType_PING
}

func (m *BasePingResponse) GetCookie() uint64 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

type AlertRule struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Disabled bool   `protobuf:"varint,3,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *AlertRule) Reset()                    { *m = AlertRule{} }
func (m *AlertRule) String() string            { return proto.CompactTextString(m) }
func (*AlertRule) ProtoMessage()               {}
func (*AlertRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AlertRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlertRule) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AlertRule) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type AlertsListRequest struct {
}

func (m *AlertsListRequest) Reset()                    { *m = AlertsListRequest{} }
func (m *AlertsListRequest) String() string            { return proto.CompactTextString(m) }
func (*AlertsListRequest) ProtoMessage()               {}
func (*AlertsListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type AlertsListResponse struct {
	Error      Error        `protobuf:"varint,1,opt,name=error,enum=api.Error" json:"error,omitempty"`
	AlertRules []*AlertRule `protobuf:"bytes,2,rep,name=alert_rules,json=alertRules" json:"alert_rules,omitempty"`
}

func (m *AlertsListResponse) Reset()                    { *m = AlertsListResponse{} }
func (m *AlertsListResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertsListResponse) ProtoMessage()               {}
func (*AlertsListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AlertsListResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *AlertsListResponse) GetAlertRules() []*AlertRule {
	if m != nil {
		return m.AlertRules
	}
	return nil
}

func init() {
	proto.RegisterType((*BaseVersionRequest)(nil), "api.BaseVersionRequest")
	proto.RegisterType((*BaseVersionResponse)(nil), "api.BaseVersionResponse")
	proto.RegisterType((*BasePingRequest)(nil), "api.BasePingRequest")
	proto.RegisterType((*BasePingResponse)(nil), "api.BasePingResponse")
	proto.RegisterType((*AlertRule)(nil), "api.AlertRule")
	proto.RegisterType((*AlertsListRequest)(nil), "api.AlertsListRequest")
	proto.RegisterType((*AlertsListResponse)(nil), "api.AlertsListResponse")
	proto.RegisterEnum("api.Error", Error_name, Error_value)
	proto.RegisterEnum("api.PingType", PingType_name, PingType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Base service

type BaseClient interface {
	Version(ctx context.Context, in *BaseVersionRequest, opts ...grpc.CallOption) (*BaseVersionResponse, error)
	Ping(ctx context.Context, opts ...grpc.CallOption) (Base_PingClient, error)
}

type baseClient struct {
	cc *grpc.ClientConn
}

func NewBaseClient(cc *grpc.ClientConn) BaseClient {
	return &baseClient{cc}
}

func (c *baseClient) Version(ctx context.Context, in *BaseVersionRequest, opts ...grpc.CallOption) (*BaseVersionResponse, error) {
	out := new(BaseVersionResponse)
	err := grpc.Invoke(ctx, "/api.Base/Version", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseClient) Ping(ctx context.Context, opts ...grpc.CallOption) (Base_PingClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Base_serviceDesc.Streams[0], c.cc, "/api.Base/Ping", opts...)
	if err != nil {
		return nil, err
	}
	x := &basePingClient{stream}
	return x, nil
}

type Base_PingClient interface {
	Send(*BasePingRequest) error
	Recv() (*BasePingResponse, error)
	grpc.ClientStream
}

type basePingClient struct {
	grpc.ClientStream
}

func (x *basePingClient) Send(m *BasePingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *basePingClient) Recv() (*BasePingResponse, error) {
	m := new(BasePingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Base service

type BaseServer interface {
	Version(context.Context, *BaseVersionRequest) (*BaseVersionResponse, error)
	Ping(Base_PingServer) error
}

func RegisterBaseServer(s *grpc.Server, srv BaseServer) {
	s.RegisterService(&_Base_serviceDesc, srv)
}

func _Base_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Base/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServer).Version(ctx, req.(*BaseVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Base_Ping_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BaseServer).Ping(&basePingServer{stream})
}

type Base_PingServer interface {
	Send(*BasePingResponse) error
	Recv() (*BasePingRequest, error)
	grpc.ServerStream
}

type basePingServer struct {
	grpc.ServerStream
}

func (x *basePingServer) Send(m *BasePingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *basePingServer) Recv() (*BasePingRequest, error) {
	m := new(BasePingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Base_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Base",
	HandlerType: (*BaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Base_Version_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Ping",
			Handler:       _Base_Ping_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pmm.proto",
}

// Client API for Alerts service

type AlertsClient interface {
	List(ctx context.Context, in *AlertsListRequest, opts ...grpc.CallOption) (*AlertsListResponse, error)
}

type alertsClient struct {
	cc *grpc.ClientConn
}

func NewAlertsClient(cc *grpc.ClientConn) AlertsClient {
	return &alertsClient{cc}
}

func (c *alertsClient) List(ctx context.Context, in *AlertsListRequest, opts ...grpc.CallOption) (*AlertsListResponse, error) {
	out := new(AlertsListResponse)
	err := grpc.Invoke(ctx, "/api.Alerts/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Alerts service

type AlertsServer interface {
	List(context.Context, *AlertsListRequest) (*AlertsListResponse, error)
}

func RegisterAlertsServer(s *grpc.Server, srv AlertsServer) {
	s.RegisterService(&_Alerts_serviceDesc, srv)
}

func _Alerts_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Alerts/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).List(ctx, req.(*AlertsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Alerts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Alerts",
	HandlerType: (*AlertsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Alerts_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pmm.proto",
}

func init() { proto.RegisterFile("pmm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x13, 0x37, 0x75, 0x26, 0x6d, 0x09, 0x93, 0xfe, 0x58, 0x16, 0x42, 0xc6, 0x27, 0xab,
	0x87, 0xb8, 0x0a, 0x07, 0xce, 0x20, 0x55, 0x15, 0xa2, 0x24, 0x65, 0x05, 0x5c, 0xab, 0x2d, 0x1d,
	0x45, 0x2b, 0x1c, 0xef, 0xe2, 0xdd, 0x54, 0xf4, 0xca, 0x23, 0xc0, 0xa3, 0xf1, 0x0a, 0x3c, 0x08,
	0xda, 0xf5, 0x3a, 0x09, 0xe4, 0xd8, 0xdb, 0xec, 0x37, 0x33, 0xdf, 0x7c, 0xf3, 0xed, 0x40, 0x5f,
	0x2d, 0x16, 0x63, 0x55, 0x4b, 0x23, 0xb1, 0xcb, 0x95, 0x48, 0x9e, 0xcd, 0xa5, 0x9c, 0x97, 0x54,
	0x70, 0x25, 0x0a, 0x5e, 0x55, 0xd2, 0x70, 0x23, 0x64, 0xa5, 0x9b, 0x92, 0xec, 0x08, 0xf0, 0x0d,
	0xd7, 0xf4, 0x99, 0x6a, 0x2d, 0x64, 0xc5, 0xe8, 0xdb, 0x92, 0xb4, 0xc9, 0x0a, 0x18, 0xfd, 0x83,
	0x6a, 0x25, 0x2b, 0x4d, 0x18, 0xc3, 0xde, 0x7d, 0x03, 0xc5, 0x41, 0x1a, 0xe4, 0x7d, 0xd6, 0x3e,
	0xb3, 0x2b, 0x78, 0x62, 0x1b, 0xae, 0x45, 0x35, 0xf7, 0x1c, 0xf8, 0x02, 0x42, 0xf3, 0xa0, 0xc8,
	0x55, 0x1e, 0x4e, 0x0e, 0xc6, 0x5c, 0x89, 0xb1, 0xcd, 0x7f, 0x7c, 0x50, 0xc4, 0x5c, 0x0a, 0x4f,
	0xa0, 0xf7, 0x45, 0xca, 0xaf, 0x82, 0xe2, 0x4e, 0x1a, 0xe4, 0x3d, 0xe6, 0x5f, 0xd9, 0x7b, 0x18,
	0xae, 0xd9, 0xfc, 0xec, 0x47, 0xd0, 0xcd, 0xa0, 0xff, 0xba, 0xa4, 0xda, 0xb0, 0x65, 0x49, 0x88,
	0x10, 0x56, 0x7c, 0x41, 0x7e, 0x01, 0x17, 0x5b, 0xcc, 0xd0, 0x77, 0xe3, 0xda, 0xfa, 0xcc, 0xc5,
	0x98, 0x40, 0x74, 0x27, 0x34, 0xbf, 0x2d, 0xe9, 0x2e, 0xee, 0xa6, 0x41, 0x1e, 0xb1, 0xd5, 0x3b,
	0x1b, 0xc1, 0x53, 0x47, 0xa8, 0xaf, 0x84, 0x36, 0xad, 0x67, 0x73, 0xc0, 0x4d, 0xd0, 0xcb, 0x4e,
	0x61, 0x97, 0xea, 0x5a, 0xd6, 0x5e, 0x37, 0x38, 0xdd, 0x17, 0x16, 0x61, 0x4d, 0x02, 0x0b, 0x18,
	0x70, 0xdb, 0x77, 0x53, 0x2f, 0x4b, 0xd2, 0x71, 0x27, 0xed, 0xe6, 0x83, 0xc9, 0xa1, 0xab, 0x5b,
	0xa9, 0x66, 0xc0, 0xdb, 0x50, 0x9f, 0x1d, 0xc3, 0xae, 0x23, 0xc0, 0x7d, 0x88, 0xa6, 0xb3, 0x9b,
	0x0b, 0xc6, 0x66, 0x6c, 0xb8, 0x73, 0xf6, 0x1c, 0xa2, 0xd6, 0x0f, 0x8c, 0x20, 0xbc, 0x7e, 0x3b,
	0xbd, 0x1c, 0xee, 0xb8, 0x68, 0x36, 0xbd, 0x1c, 0x06, 0x93, 0x9f, 0x01, 0x84, 0xd6, 0x55, 0xfc,
	0x00, 0x7b, 0xfe, 0x63, 0xf1, 0xd4, 0x8d, 0xd9, 0x3e, 0x80, 0x24, 0xde, 0x4e, 0x34, 0x0b, 0x65,
	0xa3, 0x1f, 0xbf, 0xff, 0xfc, 0xea, 0x1c, 0xe0, 0xa0, 0xb8, 0x3f, 0x2f, 0xfc, 0xf7, 0xe3, 0x2b,
	0x08, 0xed, 0x6c, 0x3c, 0x5a, 0xb5, 0x6d, 0x5c, 0x42, 0x72, 0xfc, 0x1f, 0xda, 0x30, 0xe5, 0xc1,
	0x79, 0x30, 0xf9, 0x04, 0xbd, 0xc6, 0x34, 0x7c, 0x07, 0xa1, 0x35, 0x0e, 0x4f, 0xd6, 0x9b, 0x6f,
	0xda, 0x9b, 0x9c, 0x6e, 0xe1, 0x5e, 0x10, 0x3a, 0x41, 0xfb, 0x08, 0x56, 0x90, 0xb3, 0x49, 0xdf,
	0xf6, 0xdc, 0x71, 0xbf, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x81, 0x53, 0xdc, 0x67, 0x0c, 0x03,
	0x00, 0x00,
}
