{
  "swagger": "2.0",
  "info": {
    "title": "scrape_jobs.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/scrape-jobs": {
      "get": {
        "summary": "List returns all scrape jobs.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeJobsListResponse"
            }
          }
        },
        "tags": [
          "ScrapeJobs"
        ]
      },
      "post": {
        "summary": "Create creates a new scrape job.\nErrors: InvalidArgument(3) if some argument is not valid,\nAlreadyExists(6) if scrape job with that name is already present.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeJobsCreateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiScrapeJobsCreateRequest"
            }
          }
        ],
        "tags": [
          "ScrapeJobs"
        ]
      }
    },
    "/v0/scrape-jobs/{name}": {
      "get": {
        "summary": "Get returns a scrape job by name.\nErrors: NotFound(5) if no such scrape job is present.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeJobsGetResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ScrapeJobs"
        ]
      },
      "delete": {
        "summary": "Delete removes existing scrape job by name.\nErrors: NotFound(5) if no such scrape job is present.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeJobsDeleteResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ScrapeJobs"
        ]
      }
    }
  },
  "definitions": {
    "apiScrapeJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Scrape job name: \"example-job\" (required)"
        },
        "interval": {
          "type": "string",
          "title": "Scrape interval: \"10s\""
        },
        "timeout": {
          "type": "string",
          "title": "Scrape timeout: \"5s\""
        },
        "path": {
          "type": "string",
          "title": "Metrics path: \"/metrics\""
        },
        "scheme": {
          "type": "string",
          "title": "Scheme for scrapping: \"http\" or \"https\""
        },
        "statis_targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Hosts and ports: \"127.0.0.1:9090\" (required)"
        }
      }
    },
    "apiScrapeJobsCreateRequest": {
      "type": "object",
      "properties": {
        "scrape_job": {
          "$ref": "#/definitions/apiScrapeJob"
        }
      }
    },
    "apiScrapeJobsCreateResponse": {
      "type": "object"
    },
    "apiScrapeJobsDeleteRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "apiScrapeJobsDeleteResponse": {
      "type": "object"
    },
    "apiScrapeJobsGetRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "apiScrapeJobsGetResponse": {
      "type": "object",
      "properties": {
        "scrape_job": {
          "$ref": "#/definitions/apiScrapeJob"
        }
      }
    },
    "apiScrapeJobsListRequest": {
      "type": "object"
    },
    "apiScrapeJobsListResponse": {
      "type": "object",
      "properties": {
        "scrape_jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiScrapeJob"
          }
        }
      }
    }
  }
}
