// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scrape_jobs.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ScrapeJob struct {
	// Scrape job name: "example-job" (required)
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Scrape interval: "10s"
	Interval string `protobuf:"bytes,2,opt,name=interval" json:"interval,omitempty"`
	// Scrape timeout: "5s"
	Timeout string `protobuf:"bytes,3,opt,name=timeout" json:"timeout,omitempty"`
	// Metrics path: "/metrics"
	Path string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	// Scheme for scrapping: "http" or "https"
	Scheme string `protobuf:"bytes,5,opt,name=scheme" json:"scheme,omitempty"`
	// Hosts and ports: "127.0.0.1:9090" (required)
	StatisTargets []string `protobuf:"bytes,6,rep,name=statis_targets,json=statisTargets" json:"statis_targets,omitempty"`
}

func (m *ScrapeJob) Reset()                    { *m = ScrapeJob{} }
func (m *ScrapeJob) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJob) ProtoMessage()               {}
func (*ScrapeJob) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ScrapeJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScrapeJob) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *ScrapeJob) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *ScrapeJob) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ScrapeJob) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *ScrapeJob) GetStatisTargets() []string {
	if m != nil {
		return m.StatisTargets
	}
	return nil
}

type ScrapeJobsListRequest struct {
}

func (m *ScrapeJobsListRequest) Reset()                    { *m = ScrapeJobsListRequest{} }
func (m *ScrapeJobsListRequest) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsListRequest) ProtoMessage()               {}
func (*ScrapeJobsListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type ScrapeJobsListResponse struct {
	Error      Error        `protobuf:"varint,1,opt,name=error,enum=api.Error" json:"error,omitempty"`
	ScrapeJobs []*ScrapeJob `protobuf:"bytes,2,rep,name=scrape_jobs,json=scrapeJobs" json:"scrape_jobs,omitempty"`
}

func (m *ScrapeJobsListResponse) Reset()                    { *m = ScrapeJobsListResponse{} }
func (m *ScrapeJobsListResponse) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsListResponse) ProtoMessage()               {}
func (*ScrapeJobsListResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ScrapeJobsListResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *ScrapeJobsListResponse) GetScrapeJobs() []*ScrapeJob {
	if m != nil {
		return m.ScrapeJobs
	}
	return nil
}

type ScrapeJobsGetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ScrapeJobsGetRequest) Reset()                    { *m = ScrapeJobsGetRequest{} }
func (m *ScrapeJobsGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsGetRequest) ProtoMessage()               {}
func (*ScrapeJobsGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ScrapeJobsGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ScrapeJobsGetResponse struct {
	Error     Error      `protobuf:"varint,1,opt,name=error,enum=api.Error" json:"error,omitempty"`
	ScrapeJob *ScrapeJob `protobuf:"bytes,2,opt,name=scrape_job,json=scrapeJob" json:"scrape_job,omitempty"`
}

func (m *ScrapeJobsGetResponse) Reset()                    { *m = ScrapeJobsGetResponse{} }
func (m *ScrapeJobsGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsGetResponse) ProtoMessage()               {}
func (*ScrapeJobsGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ScrapeJobsGetResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *ScrapeJobsGetResponse) GetScrapeJob() *ScrapeJob {
	if m != nil {
		return m.ScrapeJob
	}
	return nil
}

type ScrapeJobsCreateRequest struct {
	ScrapeJob *ScrapeJob `protobuf:"bytes,1,opt,name=scrape_job,json=scrapeJob" json:"scrape_job,omitempty"`
}

func (m *ScrapeJobsCreateRequest) Reset()                    { *m = ScrapeJobsCreateRequest{} }
func (m *ScrapeJobsCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsCreateRequest) ProtoMessage()               {}
func (*ScrapeJobsCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ScrapeJobsCreateRequest) GetScrapeJob() *ScrapeJob {
	if m != nil {
		return m.ScrapeJob
	}
	return nil
}

type ScrapeJobsCreateResponse struct {
	Error Error `protobuf:"varint,1,opt,name=error,enum=api.Error" json:"error,omitempty"`
}

func (m *ScrapeJobsCreateResponse) Reset()                    { *m = ScrapeJobsCreateResponse{} }
func (m *ScrapeJobsCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsCreateResponse) ProtoMessage()               {}
func (*ScrapeJobsCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ScrapeJobsCreateResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

type ScrapeJobsDeleteRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ScrapeJobsDeleteRequest) Reset()                    { *m = ScrapeJobsDeleteRequest{} }
func (m *ScrapeJobsDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsDeleteRequest) ProtoMessage()               {}
func (*ScrapeJobsDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *ScrapeJobsDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ScrapeJobsDeleteResponse struct {
	Error Error `protobuf:"varint,1,opt,name=error,enum=api.Error" json:"error,omitempty"`
}

func (m *ScrapeJobsDeleteResponse) Reset()                    { *m = ScrapeJobsDeleteResponse{} }
func (m *ScrapeJobsDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*ScrapeJobsDeleteResponse) ProtoMessage()               {}
func (*ScrapeJobsDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *ScrapeJobsDeleteResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func init() {
	proto.RegisterType((*ScrapeJob)(nil), "api.ScrapeJob")
	proto.RegisterType((*ScrapeJobsListRequest)(nil), "api.ScrapeJobsListRequest")
	proto.RegisterType((*ScrapeJobsListResponse)(nil), "api.ScrapeJobsListResponse")
	proto.RegisterType((*ScrapeJobsGetRequest)(nil), "api.ScrapeJobsGetRequest")
	proto.RegisterType((*ScrapeJobsGetResponse)(nil), "api.ScrapeJobsGetResponse")
	proto.RegisterType((*ScrapeJobsCreateRequest)(nil), "api.ScrapeJobsCreateRequest")
	proto.RegisterType((*ScrapeJobsCreateResponse)(nil), "api.ScrapeJobsCreateResponse")
	proto.RegisterType((*ScrapeJobsDeleteRequest)(nil), "api.ScrapeJobsDeleteRequest")
	proto.RegisterType((*ScrapeJobsDeleteResponse)(nil), "api.ScrapeJobsDeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ScrapeJobs service

type ScrapeJobsClient interface {
	// List returns all scrape jobs.
	List(ctx context.Context, in *ScrapeJobsListRequest, opts ...grpc.CallOption) (*ScrapeJobsListResponse, error)
	// Get returns a scrape job by name.
	Get(ctx context.Context, in *ScrapeJobsGetRequest, opts ...grpc.CallOption) (*ScrapeJobsGetResponse, error)
	// Create creates a new scrape job.
	Create(ctx context.Context, in *ScrapeJobsCreateRequest, opts ...grpc.CallOption) (*ScrapeJobsCreateResponse, error)
	// Delete removes a scrape job by name.
	Delete(ctx context.Context, in *ScrapeJobsDeleteRequest, opts ...grpc.CallOption) (*ScrapeJobsDeleteResponse, error)
}

type scrapeJobsClient struct {
	cc *grpc.ClientConn
}

func NewScrapeJobsClient(cc *grpc.ClientConn) ScrapeJobsClient {
	return &scrapeJobsClient{cc}
}

func (c *scrapeJobsClient) List(ctx context.Context, in *ScrapeJobsListRequest, opts ...grpc.CallOption) (*ScrapeJobsListResponse, error) {
	out := new(ScrapeJobsListResponse)
	err := grpc.Invoke(ctx, "/api.ScrapeJobs/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeJobsClient) Get(ctx context.Context, in *ScrapeJobsGetRequest, opts ...grpc.CallOption) (*ScrapeJobsGetResponse, error) {
	out := new(ScrapeJobsGetResponse)
	err := grpc.Invoke(ctx, "/api.ScrapeJobs/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeJobsClient) Create(ctx context.Context, in *ScrapeJobsCreateRequest, opts ...grpc.CallOption) (*ScrapeJobsCreateResponse, error) {
	out := new(ScrapeJobsCreateResponse)
	err := grpc.Invoke(ctx, "/api.ScrapeJobs/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeJobsClient) Delete(ctx context.Context, in *ScrapeJobsDeleteRequest, opts ...grpc.CallOption) (*ScrapeJobsDeleteResponse, error) {
	out := new(ScrapeJobsDeleteResponse)
	err := grpc.Invoke(ctx, "/api.ScrapeJobs/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ScrapeJobs service

type ScrapeJobsServer interface {
	// List returns all scrape jobs.
	List(context.Context, *ScrapeJobsListRequest) (*ScrapeJobsListResponse, error)
	// Get returns a scrape job by name.
	Get(context.Context, *ScrapeJobsGetRequest) (*ScrapeJobsGetResponse, error)
	// Create creates a new scrape job.
	Create(context.Context, *ScrapeJobsCreateRequest) (*ScrapeJobsCreateResponse, error)
	// Delete removes a scrape job by name.
	Delete(context.Context, *ScrapeJobsDeleteRequest) (*ScrapeJobsDeleteResponse, error)
}

func RegisterScrapeJobsServer(s *grpc.Server, srv ScrapeJobsServer) {
	s.RegisterService(&_ScrapeJobs_serviceDesc, srv)
}

func _ScrapeJobs_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeJobsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeJobsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeJobs/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeJobsServer).List(ctx, req.(*ScrapeJobsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeJobs_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeJobsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeJobsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeJobs/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeJobsServer).Get(ctx, req.(*ScrapeJobsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeJobs_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeJobsCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeJobsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeJobs/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeJobsServer).Create(ctx, req.(*ScrapeJobsCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeJobs_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeJobsDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeJobsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeJobs/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeJobsServer).Delete(ctx, req.(*ScrapeJobsDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScrapeJobs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ScrapeJobs",
	HandlerType: (*ScrapeJobsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ScrapeJobs_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ScrapeJobs_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ScrapeJobs_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ScrapeJobs_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scrape_jobs.proto",
}

func init() { proto.RegisterFile("scrape_jobs.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0xd4, 0x90, 0xa9, 0x08, 0xea, 0xa8, 0x24, 0xcb, 0x52, 0x50, 0xb4, 0x12, 0x52,
	0x14, 0x29, 0x31, 0x0a, 0x37, 0xc4, 0x0d, 0x50, 0x11, 0xe2, 0x64, 0x38, 0x70, 0x40, 0xaa, 0x36,
	0xd5, 0x28, 0x31, 0x24, 0x5e, 0xe3, 0xdd, 0xf6, 0x82, 0xb8, 0xf0, 0x01, 0x5c, 0xf8, 0x09, 0xfe,
	0x87, 0x5f, 0xe0, 0x43, 0x90, 0x77, 0x63, 0x3b, 0x76, 0x5c, 0x35, 0xb7, 0xdd, 0x79, 0xe3, 0xf7,
	0xde, 0xbc, 0x59, 0x19, 0x4e, 0xf4, 0x65, 0x26, 0x53, 0xba, 0xf8, 0xa2, 0x16, 0x7a, 0x96, 0x66,
	0xca, 0x28, 0xf4, 0x65, 0x1a, 0xf3, 0xb3, 0xa5, 0x52, 0xcb, 0x35, 0x85, 0x32, 0x8d, 0x43, 0x99,
	0x24, 0xca, 0x48, 0x13, 0xab, 0x64, 0xdb, 0xc2, 0x61, 0x21, 0x35, 0xb9, 0xb3, 0xf8, 0xe3, 0x41,
	0xef, 0x83, 0x25, 0x79, 0xa7, 0x16, 0x88, 0xd0, 0x4d, 0xe4, 0x86, 0x98, 0x37, 0xf2, 0xc6, 0xbd,
	0xc8, 0x9e, 0x91, 0xc3, 0xdd, 0x38, 0x31, 0x94, 0x5d, 0xcb, 0x35, 0xeb, 0xd8, 0x7a, 0x79, 0x47,
	0x06, 0x77, 0x4c, 0xbc, 0x21, 0x75, 0x65, 0x98, 0x6f, 0xa1, 0xe2, 0x9a, 0x33, 0xa5, 0xd2, 0xac,
	0x58, 0xd7, 0x31, 0xe5, 0x67, 0x1c, 0x40, 0xa0, 0x2f, 0x57, 0xb4, 0x21, 0x76, 0x64, 0xab, 0xdb,
	0x1b, 0x3e, 0x85, 0xbe, 0xce, 0x1d, 0xea, 0x0b, 0x23, 0xb3, 0x25, 0x19, 0xcd, 0x82, 0x91, 0x3f,
	0xee, 0x45, 0xf7, 0x5c, 0xf5, 0xa3, 0x2b, 0x8a, 0x21, 0x3c, 0x28, 0x9d, 0xea, 0xf7, 0xb1, 0x36,
	0x11, 0x7d, 0xbb, 0x22, 0x6d, 0xc4, 0x57, 0x18, 0x34, 0x01, 0x9d, 0xaa, 0x44, 0x13, 0x8e, 0xe0,
	0x88, 0xb2, 0x4c, 0x65, 0x76, 0xa0, 0xfe, 0x1c, 0x66, 0x32, 0x8d, 0x67, 0x6f, 0xf2, 0x4a, 0xe4,
	0x00, 0x0c, 0xe1, 0x78, 0x27, 0x43, 0xd6, 0x19, 0xf9, 0xe3, 0xe3, 0x79, 0xdf, 0xf6, 0x95, 0x9c,
	0x11, 0xe8, 0x92, 0x5e, 0x4c, 0xe0, 0xb4, 0x12, 0x3b, 0xa7, 0xc2, 0x44, 0x5b, 0x74, 0x62, 0xb5,
	0xeb, 0xd8, 0xf6, 0x1e, 0xec, 0x6b, 0x0a, 0x50, 0xf9, 0xb2, 0xb9, 0xef, 0xdb, 0xea, 0x95, 0xb6,
	0xc4, 0x5b, 0x18, 0x56, 0x4a, 0xaf, 0x32, 0x92, 0x86, 0x0a, 0x63, 0x75, 0x26, 0xef, 0x36, 0xa6,
	0x97, 0xc0, 0xf6, 0x99, 0x0e, 0xb5, 0x2d, 0xa6, 0xbb, 0x3e, 0x5e, 0xd3, 0x9a, 0x2a, 0x1f, 0x6d,
	0x01, 0xd5, 0xc4, 0x8a, 0xf6, 0x43, 0xc5, 0xe6, 0xbf, 0x7c, 0x80, 0xea, 0x73, 0xfc, 0x04, 0xdd,
	0x7c, 0xf9, 0xc8, 0xeb, 0xc3, 0xed, 0x3e, 0x15, 0xfe, 0xa8, 0x15, 0x73, 0x8a, 0x62, 0xf8, 0xf3,
	0xef, 0xbf, 0xdf, 0x9d, 0x13, 0xbc, 0x1f, 0x5e, 0x3f, 0x0b, 0x5d, 0x22, 0xd3, 0xfc, 0x55, 0xe0,
	0x67, 0xf0, 0xcf, 0xc9, 0xe0, 0xc3, 0xc6, 0xc7, 0xd5, 0xf6, 0x39, 0x6f, 0x83, 0xb6, 0xb4, 0x4f,
	0x2c, 0x2d, 0xc3, 0x41, 0x83, 0x36, 0xfc, 0x9e, 0x67, 0xf0, 0x03, 0x25, 0x04, 0x2e, 0x67, 0x3c,
	0x6b, 0xb0, 0xd4, 0x16, 0xc9, 0x1f, 0xdf, 0x80, 0x6e, 0x65, 0xb8, 0x95, 0x39, 0x15, 0x4d, 0xf7,
	0x2f, 0xbc, 0x09, 0x12, 0x04, 0x2e, 0xdd, 0x3d, 0x89, 0xda, 0x8e, 0xf6, 0x24, 0xea, 0x2b, 0x29,
	0x26, 0x99, 0xdc, 0x30, 0xc9, 0x22, 0xb0, 0xff, 0x94, 0xe7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xdf, 0x1a, 0x45, 0x50, 0x97, 0x04, 0x00, 0x00,
}
